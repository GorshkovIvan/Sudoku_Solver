void load_board(const char* filename, char board[9][9]);
void display_board(const char board[9][9]);
bool is_complete(const char board[9][9]);
bool make_move(const char position[2], char digit, char board[9][9]);
bool is_position_valid(int row, int column, char digit, const char board[9][9]);
bool save_board(const char *filename, const char board[9][9]);
bool solve_board(char board[9][9]);
void find_possible_values(int row, int column, char quadrant[9][10], char board[9][9]);
bool solve_quadrant(int row, int column, char board[9][9]);
bool solve_row(int row, char board[9][9]);
bool solve_column(int column, char board[9][9]);
void find_possible_values_row(int row, char row_values[9][10],char board[9][9]);
void find_possible_values_column(int column, char column_values[9][10],char board[9][9]);
void find_unique_solutions(char array[9][10], char unique_solutions[10]);
bool solve_unique_value_cells(char board[9][9]);
void print_board(const char board[9][10]);
void guess_values(char board[9][9], const char previous_board[9][9]);
bool backtracking_algorithm(char board[9][9]);
int find_empty_cell(const char board[9][9], int &row, int &column);
